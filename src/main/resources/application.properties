# Configuration file
# key = value


custom.greeting = Welcome

quarkus.jib.base-native-image=quay.io/quarkus/quarkus-micro-image:1.0

quarkus.container-image.registry=quay.io
quarkus.container-image.group=anasandbox
quarkus.container-image.tag=1.0.0-upx7


quarkus.container-image.build=true
quarkus.container-image.push=true

quarkus.kubernetes.service-type=load-balancer
quarkus.kubernetes.ingress.expose=true
quarkus.kubernetes.deploy=false

quarkus.kubernetes.resources.requests.memory=140Mi
quarkus.kubernetes.resources.requests.cpu=100m
quarkus.kubernetes.resources.limits.memory=280Mi
quarkus.kubernetes.resources.limits.cpu=200m
quarkus.kubernetes.env.secrets=postgres

#knative; disbale this configuration to generate kubernetes resources
quarkus.kubernetes.deployment-target=knative
quarkus.knative.env.secrets=postgres
quarkus.knative.name=serverless-fellowship
quarkus.knative.revision-name=serverless-fellowship-001
quarkus.knative.traffic."serverless-fellowship-001".percent=100


####DEV#####
%dev.quarkus.hibernate-orm.database.generation = drop-and-create
%dev.quarkus.hibernate-orm.sql-load-script=import-dev.sql
%dev.quarkus.datasource.db-kind=postgresql


####PROD####
%prod.quarkus.hibernate-orm.database.generation = update
%prod.quarkus.datasource.db-kind=postgresql
%prod.quarkus.datasource.username = ${database-user}
%prod.quarkus.datasource.password = ${database-password}
%prod.quarkus.datasource.jdbc.url = jdbc:postgresql://${POSTGRES_SERVER:postgres}:5432/${database-name}
%prod.quarkus.hibernate-orm.log.sql = false
